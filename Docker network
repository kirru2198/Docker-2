Docker provides several commands for managing and working with networks. Here is a list of key commands related to Docker networking:

1. **`docker network ls`**  
   - **Description**: Lists all Docker networks.
   - **Example**:  
     ```bash
     docker network ls
     ```

2. **`docker network inspect <network>`**  
   - **Description**: Provides detailed information about a specific Docker network.
   - **Example**:  
     ```bash
     docker network inspect bridge
     ```

3. **`docker network create <network_name>`**  
   - **Description**: Creates a new Docker network.
   - **Example**:  
     ```bash
     docker network create my_network
     ```

4. **`docker network rm <network_name>`**  
   - **Description**: Removes one or more Docker networks.
   - **Example**:  
     ```bash
     docker network rm my_network
     ```

5. **`docker network connect <network_name> <container_name_or_id>`**  
   - **Description**: Connects a container to a network.
   - **Example**:  
     ```bash
     docker network connect my_network my_container
     ```

6. **`docker network disconnect <network_name> <container_name_or_id>`**  
   - **Description**: Disconnects a container from a network.
   - **Example**:  
     ```bash
     docker network disconnect my_network my_container
     ```

7. **`docker network prune`**  
   - **Description**: Removes all unused networks.
   - **Example**:  
     ```bash
     docker network prune
     ```

8. **`docker network inspect <network_name> --format`**  
   - **Description**: Use the `--format` flag to get a specific field from the network's details in a more concise output format (e.g., JSON).
   - **Example**:  
     ```bash
     docker network inspect my_network --format '{{.Id}}'
     ```

9. **`docker network create --driver <driver_name> <network_name>`**  
   - **Description**: Create a network with a specific driver (e.g., `bridge`, `host`, `overlay`).
   - **Example**:  
     ```bash
     docker network create --driver bridge my_bridge_network
     ```

10. **`docker network create --subnet <subnet>`**  
   - **Description**: Create a network with a specific subnet.
   - **Example**:  
     ```bash
     docker network create --subnet=192.168.1.0/24 my_network_with_subnet
     ```

11. **`docker network create --gateway <gateway>`**  
   - **Description**: Create a network with a specific gateway.
   - **Example**:  
     ```bash
     docker network create --gateway=192.168.1.1 my_network_with_gateway
     ```

12. **`docker network create --ipv6`**  
   - **Description**: Create a network that supports IPv6.
   - **Example**:  
     ```bash
     docker network create --ipv6 my_network_ipv6
     ```

13. **`docker network ls --filter <key>=<value>`**  
   - **Description**: Lists Docker networks with optional filters (e.g., by driver or name).
   - **Example**:  
     ```bash
     docker network ls --filter driver=bridge
     ```

These commands are essential for managing network configurations in Docker environments.
